<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
						http://www.springframework.org/schema/mvc 
						http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd 
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-4.0.xsd 
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-4.0.xsd 
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-4.0.xsd 
						http://www.springframework.org/schema/task     
                        http://www.springframework.org/schema/task/spring-task-4.0.xsd">

	 <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig"> 
        <property name="maxIdle" value="30" /> 
        <property name="maxTotal" value="150" />
        <property name="minIdle" value="10" />  
        <property name="blockWhenExhausted" value="true" /> 
        <property name="maxWaitMillis" value="30000" /> 
        <property name="testOnBorrow" value="true" />  
    </bean> 

	
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"> 
        <property name="hostName" value="${redis.host}" /> 
        <property name="port" value="${redis.port}"/>
        <property name="password" value="${redis.password}"></property>
       <!--  <property name="timeout" value="2000"></property> -->
        <property name="poolConfig" ref="jedisPoolConfig" /> 
        <property name="usePool" value="true"/> 
    </bean> 


    <bean id="redisTemplate" class="org.springframework.data.redis.core.StringRedisTemplate">   
        <property name="connectionFactory"   ref="jedisConnectionFactory" />   
    </bean>
    
    <bean id = "sessionTemplate" class = "com.jee.rest.base.session.template.redis.RedisSessionTemplate">
         <property name="redisTemplate" ref = "redisTemplate"></property>
    </bean>
    
    
     <!-- redis 注解缓存 -->
    <bean id = "cacheAspect" class = "com.jee.rest.base.aop.cache.RedisAsyncCacheAnnotationAspect">
         <property name="redisTemplate" ref = "redisTemplate"></property>
    </bean>
   
    <aop:config>
        <aop:aspect id ="aspect" ref = "cacheAspect">
            <aop:pointcut id="cacheSet" expression="@annotation(com.jee.rest.base.annotation.cache.Cacheable)"/> 
            <aop:pointcut id="cacheEvict" expression="@annotation(com.jee.rest.base.annotation.cache.CacheEvict)"/> 
            <aop:pointcut id="cacheEvicts" expression="@annotation(com.jee.rest.base.annotation.cache.CacheEvicts)"/> 
            <aop:around method="cacheSet" pointcut-ref="cacheSet" ></aop:around>
            <aop:around method="cacheEvict" pointcut-ref="cacheEvict" ></aop:around>
            <aop:around method="cacheEvicts" pointcut-ref="cacheEvicts" ></aop:around>
        </aop:aspect>
    </aop:config>

</beans>